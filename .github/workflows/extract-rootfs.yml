name: Generate install.sfs & initrd_lib.tar.gz from Docker Image

on:
  push:
    branches:
      - main
      - blivet-gui
    tags:
      - v*
  pull_request:
    branches:
      - main
      - blivet-gui

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build -f Dockerfile . -t devuan

      - name: Extract RootFS & generate install.sfs & initrd_lib.tar.gz
        run: |
          # Create Docker image
          docker create --name devuan devuan echo "Devuan"
          # Export it to install
          mkdir install
          docker export devuan | tar -C install -p -s -xv
          # Move grub-rescue.iso out
          mv install/grub-rescue.iso .
          # Remove .dockerenv
          rm -rf install/.dockerenv
          # Create install.sfs
          mksquashfs install install.sfs -noappend -comp zstd
          # Copy boot_hybrid.img for Legacy BIOS
          cp install/usr/lib/grub/i386-pc/boot_hybrid.img .
          # Create initrd_lib.tar.gz
          mkdir -p initrd_lib/bin initrd_lib/lib initrd_lib/sbin
          cp install/usr/bin/busybox initrd_lib/bin/busybox
          cp install/usr/sbin/mount.ntfs-3g initrd_lib/sbin/mount.ntfs-3g
          cp install/usr/lib/*/libc.so.* initrd_lib/lib
          cp install/usr/lib/*/libdl.so.* initrd_lib/lib
          cp install/usr/lib/*/libm.so.* initrd_lib/lib
          cp install/usr/lib/*/libpthread.so.* initrd_lib/lib
          cp install/usr/lib/*/libresolv.so.* initrd_lib/lib
          cp install/usr/lib/*/librt.so.* initrd_lib/lib
          cp install/usr/lib/*/libntfs-3g.so.* initrd_lib/lib
          cp install/usr/lib/*/ld-linux-x86-64.so.* initrd_lib/lib
          cp install/usr/bin/ld.so initrd_lib/bin
          ## Get Docker busybox too
          wget "https://github.com/docker-library/busybox/raw/refs/heads/dist-amd64/latest/glibc/amd64/rootfs.tar.gz" -O rootfs_busybox.tar.gz
          mkdir docker_busybox && tar -xzf rootfs_busybox.tar.gz -C docker_busybox
          cp docker_busybox/bin/busybox initrd_lib/bin/busybox.docker
          ## Wrap initrd_lib up
          tar -czvf initrd_lib.tar.gz initrd_lib
          ## Clean up
          rm -rf docker_busybox rootfs_busybox.tar.gz install initrd_lib
          docker rm devuan

      - name: Set Vars
        id: vars
        run: |
          echo "arch=$(dpkg --print-architecture)" >> "$GITHUB_OUTPUT"

      - name: Upload install.sfs
        uses: actions/upload-artifact@v4
        with:
          name: install.sfs
          path: install.sfs

      - name: Upload initrd_lib.tar.gz
        uses: actions/upload-artifact@v4
        with:
          name: initrd_lib.tar.gz
          path: initrd_lib.tar.gz

      - name: Upload grub-rescue.iso
        uses: actions/upload-artifact@v4
        with:
          name: grub-rescue.iso
          path: grub-rescue.iso

      - name: Upload boot_hybrid.img
        uses: actions/upload-artifact@v4
        with:
          name: boot_hybrid.img
          path: boot_hybrid.img

  release:
    name: Release
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download RootFS
        id: download-rootfs
        uses: actions/download-artifact@v4
        with:
          path: out
          pattern: 'install.sfs,initrd_lib.tar.gz,grub-rescue.iso,boot_hybrid.img'
          merge-multiple: true

      - name: List Files
        run: ls -R ${{ steps.download-rootfs.outputs.download-path }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.RELEASE_TOKEN }}"
          prerelease: false
          files: |
            ${{ steps.download-rootfs.outputs.download-path }}/*.tar.gz
